AWSTemplateFormatVersion: "2010-09-09"
Description: DASH Serverless Stack, Creates Bucket, Lambda function Roles, Serverless secrets

Parameters:
  S3CodeBucket:
    Description: S3 Code Bucket
    Type: String
    Default: dash-stack-code
  Env:
    Description: 'Environment name'
    Type: String
    AllowedValues: ['staging', 'production']
    Default: 'staging'

Resources:
  S3CodeBucketResource:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Ref S3CodeBucket
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
  DASHServerlessLambdaFunctionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
          - Effect: Allow
            Principal:
              Service:
                - logs.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: dash-lambda-logs-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                  - logs:GetLogEvents
                  - logs:FilterLogEvent
                Resource:
                  - "*"
        - PolicyName: dash-secrets-manager-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource:
                  - "*"
        - PolicyName: dash-dynamodb-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:*
                Resource:
                  - "*"
        - PolicyName: dash-manage-connections
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - execute-api:ManageConnections
                Resource:
                  - "*"
        - PolicyName: dash-s3-upload-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:GetObjectVersion
                  - s3:DeleteObjectVersion
                  - s3:GetBucketLocation
                  - s3:ListBucket
                  - s3:PutBucketPolicy
                  - s3:GetBucketPolicy
                  - s3:DeleteBucketPolicy
                  - s3:PutBucketVersioning
                  - s3:GetBucketVersioning
                  - s3:DeleteBucketVersioning
                  - s3:PutBucketAcl
                  - s3:GetBucketAcl
                  - s3:DeleteBucketAcl
                  - s3:PutObjectAcl
                  - s3:GetObjectAcl
                  - s3:DeleteObjectAcl
                Resource:
                  #- 'arn:aws:s3:::my-bucket/*'
                  - "*"
  DASHServerlessSecrets:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: DASHServerlessSecrets
      Description: DASH secrets
      GenerateSecretString:
        SecretStringTemplate: '{"SECRET": "VALUE"}'
        GenerateStringKey: "DASHServerlessSecrets"
